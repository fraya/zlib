Reference
=========

.. current-library:: zlib
.. current-module:: zlib

Constants
---------

Flush values
^^^^^^^^^^^^

.. constant:: $z-no-flush

   :type: :drm:`<integer>`

.. constant:: $z-partial-flush

   :type: :drm:`<integer>`

.. constant:: $z-sync-flush

   :type: :drm:`<integer>`

.. constant:: $z-full-flush

   :type: :drm:`<integer>`

.. constant:: $z-finish

   :type: :drm:`<integer>`

.. constant:: $z-block

   :type: :drm:`<integer>`

.. constant:: $z-trees

   :type: :drm:`<integer>`

Return codes for the compression/decompression
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. constant:: $z-ok

   :type: :drm:`<integer>`

.. constant:: $z-stream-end

   :type: :drm:`<integer>`

.. constant:: $z-need-dict

   :type: :drm:`<integer>`

.. constant:: $z-errno

   :type: :drm:`<integer>`

.. constant:: $z-stream-error

   :type: :drm:`<integer>`

.. constant:: $z-data-error

   :type: :drm:`<integer>`

.. constant:: $z-mem-error

   :type: :drm:`<integer>`

.. constant:: $z-buf-error

   :type: :drm:`<integer>`

.. constant:: $z-version-error

   :type: :drm:`<integer>`

Compression levels
^^^^^^^^^^^^^^^^^^

.. constant:: $z-no-compression

   :type: :drm:`<integer>`

.. constant:: $z-best-speed

   :type: :drm:`<integer>`

.. constant:: $z-best-compression

   :type: :drm:`<integer>`

.. constant:: $z-default-compression

   :type: :drm:`<integer>`

Compression strategy
^^^^^^^^^^^^^^^^^^^^

.. constant:: $z-filtered

   :type: :drm:`<integer>`

.. constant:: $z-huffman-only

   :type: :drm:`<integer>`

.. constant:: $z-rle

   :type: :drm:`<integer>`

.. constant:: $z-fixed

   :type: :drm:`<integer>`

.. constant:: $z-default-strategy

   :type: :drm:`<integer>`

Utility functions
-----------------

These functions are implemented on top of the basic zlib
stream-oriented functions. To simplify the interface, some default
options are assumed (compression level and memory usage).


.. function:: compress

   Compress a string.

   :signature: compress *string* => (compressed-string)

   :parameter string: String to compress. An instance of :drm:`<string>`
   :value compressed-string: An instance of :drm:`<string>`

   :description:

   Compress the source string into a new string. If there is a problem
   in the compression process it raises an error.

   :example:

   .. code-block:: dylan

      let compressed = compress("Hello");
