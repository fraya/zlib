Reference
=========

.. current-library:: zlib
.. current-module:: zlib-binding

Constants
---------

Flush values
^^^^^^^^^^^^

.. constant:: $z-no-flush

   :type: :drm:`<integer>`

.. constant:: $z-partial-flush

   :type: :drm:`<integer>`

.. constant:: $z-sync-flush

   :type: :drm:`<integer>`

.. constant:: $z-full-flush

   :type: :drm:`<integer>`

.. constant:: $z-finish

   :type: :drm:`<integer>`

.. constant:: $z-block

   :type: :drm:`<integer>`

.. constant:: $z-trees

   :type: :drm:`<integer>`

Return codes for the compression/decompression
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. constant:: $z-ok

   :type: :drm:`<integer>`

.. constant:: $z-stream-end

   :type: :drm:`<integer>`

.. constant:: $z-need-dict

   :type: :drm:`<integer>`

.. constant:: $z-errno

   :type: :drm:`<integer>`

.. constant:: $z-stream-error

   :type: :drm:`<integer>`

.. constant:: $z-data-error

   :type: :drm:`<integer>`

.. constant:: $z-mem-error

   :type: :drm:`<integer>`

.. constant:: $z-buf-error

   :type: :drm:`<integer>`

.. constant:: $z-version-error

   :type: :drm:`<integer>`

Compression levels
^^^^^^^^^^^^^^^^^^

.. constant:: $z-no-compression

   :type: :drm:`<integer>`

.. constant:: $z-best-speed

   :type: :drm:`<integer>`

.. constant:: $z-best-compression

   :type: :drm:`<integer>`

.. constant:: $z-default-compression

   :type: :drm:`<integer>`

Compression strategy
^^^^^^^^^^^^^^^^^^^^

.. constant:: $z-filtered

   :type: :drm:`<integer>`

.. constant:: $z-huffman-only

   :type: :drm:`<integer>`

.. constant:: $z-rle

   :type: :drm:`<integer>`

.. constant:: $z-fixed

   :type: :drm:`<integer>`

.. constant:: $z-default-strategy

   :type: :drm:`<integer>`

Deflate data-type field values
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. constant:: $z-binary

   :type: :drm:`<integer>`

.. constant:: $z-text

   :type: :drm:`<integer>`

.. constant:: $z-ascii

   Default to ``$z-text`` for compatibility with 1.2.2 and
   earlier.

   :type: :drm:`<integer>`

.. constant:: $z-unknown

   :type: :drm:`<integer>`

Others
^^^^^^

.. constant:: $z-deflated

   The deflate compression method (the only supported in this
   version).

   :type: :drm:`<integer>`

.. constant:: $z-null

   For initialization, null pointer.

Utility functions
-----------------

These functions are implemented on top of the basic zlib
stream-oriented functions. To simplify the interface, some default
options are assumed (compression level and memory usage).


.. function:: z-compress

   Compress a string.

   :signature: z-compress *string* *destination-length* *source* *source-lenght* => (return-code)

   :parameter destination:

      Destination buffer of the compressed string.
      An instance of :class:`<C-string>`

   :parameter destination-length:

      Byte length of the destination buffer, which must be at least
      the value returned by :func:`z-compressBound`. At exit it
      contains the actual size of compressed data. An instance of
      :class:`<C-unsigned-long*>`

   :parameter source:

      String to compress. An instance of :drm:`<string>`

   :parameter source-length:

      Byte length of the source buffer.
      An instance of :class:`<C-unsigned-long>`

   :value return-code: An instance of :drm:`<integer>`

   :discussion:

   It's equivalent to :func:`z-compress-2` with a level parameter
   ``$z-default-compression``.

